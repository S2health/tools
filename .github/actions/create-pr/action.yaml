name: 'Create PR'
description: 'Run scripts and create PRs'
inputs:
  branch_name:
    description: Name of the branch to be created in the current repo
    required: true
  current_repo_name:
    description: Name of the current repo or repo that causes the trigger event
    required: false
    default: ${{ github.event.repository.name }}
  git_pat:
    description: Github Personal Access Token
    required: true
  s2_tools_path:
    description: The PATH to set to run scripts in tools repo
    required: true
  scripts_list:
    description: A list of scripts that needs to be run in the format "script1 --arg_name1 args1 --arg_name2 arg2 script2 args3"
    required: true
  target_repo_name:
    description: Name of the target repo to create the git branch and PR
    required: true

runs:
  using: "composite"
  steps:
    - name: Get current date  
      id: date
      shell: bash
      run: echo "::set-output name=date::$(date +'%Y-%m-%d_%H_%M')"
    
    - name: Create a new branch in ${{ inputs.target_repo_name }}
      working-directory: ./${{ inputs.target_repo_name }}
      shell: bash
      run: git checkout -b ${{ inputs.branch_name }}-$DATETIME
      env:
        DATETIME: ${{ steps.date.outputs.date }}

    - name: Run scripts
      working-directory: ./
      shell: bash
      run: |
        declare -A scripts_args
        script_list=( ${{ inputs.scripts_list }} )
        script_len=${#script_list[@]}
        i=0
        export ${{ inputs.s2_tools_path }}
        echo $PATH

        # Loop through script list 
        while [[ $i -lt $script_len ]]; do
          script="${script_list[$i]}"
          ((i++))
          args=()

          # Checks if the script is executable if not add it to list of arguments
          while [[ $i -lt $script_len && ! -x "${script_list[$i]}" ]]; do
            current_arg="${script_list[$i]}"
            if [[ "$current_arg" == -* ]]; then
              args+=("${current_arg}")
              ((i++))
              if [[ $i -lt $script_len && "${script_list[$i]}" != -* ]]; then
                args+=("${script_list[$i]}")
                ((i++))
              fi
            else
              args+=("$current_arg")
              ((i++))
            fi
          done

          scripts_args["$scripts"]="${args[*]}"
        done

        for script in "${!scripts_args[@]}"; do

          echo "Running $script with args: ${scripts_args[$script]}"
          bash ./tools/bin/$script ${scripts_args[$script]}
        done

    - name: Push the new branch with changes after running scripts
      working-directory: ./${{ inputs.target_repo_name }}
      shell: bash
      run: |
        git add --all
        git commit -m "Github Actions script runner"
        git push -f origin ${{ inputs.branch_name }}-$DATETIME
      env:
        DATETIME: ${{ steps.date.outputs.date }}

    - name: Create a PR in ${{ inputs.target_repo_name }} repo
      working-directory: ./${{ inputs.target_repo_name }}
      shell: bash
      run: |
        echo "${{ inputs.git_pat }}" > token.txt

        gh auth login --with-token < token.txt
        gh pr create \
          --body "Auto PR created from change in ${{ inputs.current_repo_name }} repo" \
          --title "${{ inputs.branch_name }}-$DATETIME" \
          --head "${{ inputs.branch_name }}-$DATETIME" \
          --base "main"
      env:
        DATETIME: ${{ steps.date.outputs.date }}
