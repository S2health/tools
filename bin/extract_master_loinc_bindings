#!/bin/bash
#
# Extract from master spreadsheet, in CSV form, the following fields 
#	4 - LOINC code
#   9 - archetype id
#	10 - id-code within archetype
#
# and write to a CSV in the order 9, 10, 4
#
# Performs a rudimentary handling of fields containing commas and quoted by double quotes
# Writes output to  the file mentioned in outfile variable below
#
#

USAGE="USAGE: `basename $0`"

src_repo=S2-terminology
infile=S2_Elements-LOINC_Extension_map_master.csv
inpath=$src_repo/LOINC/$infile

if [ ! -r "$inpath" ]; then
	echo "$inpath does not exist; $src_repo cloned?"
	exit 1
fi

tgt_lib_id=S2-models-demo
outdir=$tgt_lib_id/injection
outfile=loinc_master.csv
outpath=$outdir/$outfile


if [ ! -d "$outdir" ]; then
	echo "$outdir does not exist; executing from correct location?"
	exit 1
fi

tmpfile=/tmp/`basename $0`-$$.tmp
> $tmpfile
while read -r line
	do
		# use this for backslash quoting
		# qline="${line//\\,/XXXX}"

		# the following will catch two commas in a quoted field
		qline=`echo $line | sed -e 's/,"\(.*\),\(.*\)",/,"\1XXXX\2",/' -e 's/,"\(.*\),\(.*\)",/,"\1XXXX\2",/'`
		loinc_code=`echo "$qline" | cut -d',' -f4`

		# ignore long strings which are GUIDs
		#if [ ${#loinc_code} -lt 8 ]; then
			arch_id=`echo "$qline" | cut -d',' -f9`
			arch_code=`echo "$qline" | cut -d',' -f10`

			new="$arch_id,$arch_code,$loinc_code" 
			#
			# use this for backslash quoting
			# echo "${new//XXXX/\\,}" >> $outfile
			echo "${new//XXXX/,}" >> $tmpfile
		#fi
	done < $inpath

sort -u $tmpfile > $outpath
echo "Created $outpath"
